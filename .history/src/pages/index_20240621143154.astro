---
// import FeaturedVideos from "../components/FeaturedVideos.astro";     // 视频相关
// import FeaturedGuides from "../components/FeaturedGuides.astro";    // 指南组件
import FeaturedItems from "../components/FeaturedItems/FeaturedItems.astro"; // 路线图标签
import HeroSection from "../components/HeroSection/HeroSection.astro"; // 首页介绍弹窗
import BaseLayout from "../layouts/BaseLayout.astro";
// import { getAllBestPractices } from "../lib/best-practice";    // 最佳实践
// import { getAllGuides } from "../lib/guide";   // 指南
import { getRoadmapsByTag } from "../lib/roadmap";
// import { getAllVideos } from "../lib/video";   // 视频
import { getAllQuestionGroups } from "../lib/question-group";

// 按角色分的路线图
// const roleRoadmaps = await getRoadmapsByTag("role-roadmap");
// 按技能分的路线图
const skillRoadmaps = await getRoadmapsByTag("skill-roadmap");
// 最佳实践
// const bestPractices = await getAllBestPractices();
// 所有问题组
const questionGroups = await getAllQuestionGroups();
// 指南
// const guides = await getAllGuides();
// 对获取到的questionGroups数据进行过滤，只保留authorId不为空的项
const questionGuides = (await getAllQuestionGroups()).filter(
  (questionGroup) => questionGroup.frontmatter.authorId
);
// const videos = await getAllVideos();
---

<BaseLayout
  title="Developer Roadmaps - roadmap.sh"
  description={"Community driven roadmaps, articles and guides for developers to grow in their career."}
  permalink={"/"}
>
  <div class="bg-gradient-to-b from-slate-900 to-black">
    <HeroSection />

    <!-- 基于角色的路线图  暂不显示 -->
    <!-- <FeaturedItems
      heading="Role based Roadmaps"
      featuredItems={roleRoadmaps
        .filter((roadmapItem) => !roadmapItem.frontmatter.isHidden)
        .map((roadmapItem) => ({
          text: roadmapItem.frontmatter.briefTitle,
          url: `/${roadmapItem.id}`,
          isNew: roadmapItem.frontmatter.isNew,
          isUpcoming: roadmapItem.frontmatter.isUpcoming,
        }))}
      showCreateRoadmap={true}    // 不能自定义
    /> -->

    <!-- 首页显示所有的路线图标签 基于技能 -->
    <FeaturedItems
      heading="Skill based Roadmaps"
      featuredItems={skillRoadmaps
        .filter((roadmapItem) => !roadmapItem.frontmatter.isHidden)
        .map((roadmapItem) => ({
          text:
            roadmapItem.frontmatter.briefTitle === "Go"
              ? "Go Roadmap"
              : roadmapItem.frontmatter.briefTitle,
          url: `/${roadmapItem.id}`,
          isNew: roadmapItem.frontmatter.isNew,
          isUpcoming: roadmapItem.frontmatter.isUpcoming,
        }))}
    />

    <!-- <FeaturedItems
      heading="Best Practices"
      featuredItems={bestPractices.map((bestPractice) => ({
        text: bestPractice.frontmatter.briefTitle,
        url: `/best-practices/${bestPractice.id}`,
        isNew: bestPractice.frontmatter.isNew,
        isUpcoming: bestPractice.frontmatter.isUpcoming,
      }))}
    /> -->

    <FeaturedItems
      heading="Questions"
      allowBookmark={false}
      featuredItems={questionGroups.map((questionGroup) => ({
        text: questionGroup.frontmatter.briefTitle,
        url: `/questions/${questionGroup.id}`,
        isNew: questionGroup.frontmatter.isNew,
      }))}
    />

    <!-- 指南 -->
    <!-- <div class="grid grid-cols-1 gap-7 bg-gray-50 py-7 sm:gap-16 sm:py-16">
      <FeaturedGuides
        heading="Guides"
        guides={guides.slice(0, 7)}
        questions={questionGuides.slice(0, 7)}
      />
    </div> -->
  </div>
</BaseLayout>
