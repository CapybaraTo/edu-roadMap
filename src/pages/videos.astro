---
import Layout from '../layouts/Layout.astro';
import type { Course, Category, PageResponse } from '../types/video';

// 获取URL中的搜索关键词
const keyword = Astro.url.searchParams.get('keyword') || '';

// 技能等级相关的常量
const LEVEL_COLORS = {
  beginner: { bg: 'bg-green-100', text: 'text-green-800', border: 'border-green-200' },
  intermediate: { bg: 'bg-blue-100', text: 'text-blue-800', border: 'border-blue-200' },
  advanced: { bg: 'bg-purple-100', text: 'text-purple-800', border: 'border-purple-200' }
} as const;

const LEVEL_LABELS = {
  beginner: '入门',
  intermediate: '进阶',
  advanced: '专家'
} as const;

// 获取显示用的等级样式和标签
function getDisplayLevel(level: string) {
  if (level === 'expert') {
    return {
      colors: LEVEL_COLORS.advanced,
      label: '专家'
    };
  }
  return {
    colors: LEVEL_COLORS[level as keyof typeof LEVEL_COLORS],
    label: LEVEL_LABELS[level as keyof typeof LEVEL_LABELS]
  };
}

// 默认数据
const defaultCourses: Course[] = [];
let courses = defaultCourses;
let error = '';
let isLoading = true;

try {
  // 根据是否有关键词决定使用哪个API endpoint
  const apiUrl = keyword 
    ? `http://localhost:8999/api/videos/courses?page=0&size=6&keyword=${encodeURIComponent(keyword)}`
    : 'http://localhost:8999/api/videos/courses?page=0&size=6';

  // 从后端API获取数据
  const coursesResponse = await fetch(apiUrl);

  if (!coursesResponse.ok) {
    throw new Error('API请求失败');
  }

  const coursesData = await coursesResponse.json();
  courses = coursesData.content;
} catch (e) {
  console.error('Failed to fetch data:', e);
  error = e instanceof Error ? e.message : '加载数据失败';
} finally {
  isLoading = false;
}

// 搜索函数
const searchCourses = async (keyword: string) => {
  try {
    isLoading = true;
    const response = await fetch(`http://localhost:8999/api/videos/courses?page=0&size=6&keyword=${encodeURIComponent(keyword)}`);
    if (!response.ok) {
      throw new Error('搜索请求失败');
    }
    const data = await response.json();
    courses = data.content;
  } catch (e) {
    console.error('Search failed:', e);
    error = e instanceof Error ? e.message : '搜索失败';
  } finally {
    isLoading = false;
  }
};

// 定义一个辅助函数来获取课程难度的样式和标签
function getCourseLevelInfo(level: Course['difficultyLevel']) {
  return {
    colors: LEVEL_COLORS[level],
    label: LEVEL_LABELS[level]
  };
}

// 模拟推荐课程数据
const recommendedCourses: Course[] = [
  {
    courseId: 'rec-1',
    title: 'React 高级开发实战',
    description: '深入学习React核心概念和高级特性，掌握React性能优化、Hooks进阶等专业技能',
    category: '前端开发',
    difficultyLevel: 'advanced',
    instructorId: 'inst-001',
    lessonsCount: 32,
    coverImage: 'https://th.bing.com/th/id/OIP.Bil7q6xfmqrjDXWZ8iL7sQHaDt?rs=1&pid=ImgDetMain',
    rating: 4.8,
    totalRatings: 128,
    isHot: true,
    isNew: false,
    price: 299,
    status: 'published',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    targetSkill: {
      name: 'React',
      currentLevel: 'intermediate',
      targetLevel: 'expert'
    }
  },
  {
    courseId: 'rec-2',
    title: 'TypeScript 实战指南',
    description: '从零开始学习TypeScript，掌握类型系统、泛型、装饰器等高级特性',
    category: '前端开发',
    difficultyLevel: 'advanced',
    instructorId: 'inst-002',
    lessonsCount: 28,
    coverImage: 'https://miro.medium.com/max/12000/1*RNrKjnBDERdsRWbktJJm0A.jpeg',
    rating: 4.9,
    totalRatings: 156,
    isHot: true,
    isNew: false,
    price: 259,
    status: 'published',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    targetSkill: {
      name: 'TypeScript',
      currentLevel: 'intermediate',
      targetLevel: 'expert'
    }
  },
  {
    courseId: 'rec-3',
    title: 'Web性能优化实践',
    description: '全面掌握前端性能优化技巧，包括加载优化、渲染优化、资源优化等',
    category: '前端开发',
    difficultyLevel: 'advanced',
    instructorId: 'inst-003',
    lessonsCount: 24,
    coverImage: 'https://th.bing.com/th/id/OIP.xZDrDQ0V8Y41WOKxkeSQYQHaEo?rs=1&pid=ImgDetMain',
    rating: 4.7,
    totalRatings: 98,
    isHot: false,
    isNew: true,
    price: 229,
    status: 'published',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    targetSkill: {
      name: 'Web性能优化',
      currentLevel: 'beginner',
      targetLevel: 'expert'
    }
  }
];
---

<Layout title="视频课程 | AI Roadmaps" description="探索我们的视频课程，提升您的技能">
  <!-- 顶部导航栏 -->
  <nav class="bg-white border-b border-gray-100">
    <div class="container mx-auto px-4">
      <div class="flex justify-between items-center h-16">
        <!-- Logo -->
        <div class="flex items-center">
          <a href="/" class="text-xl font-bold bg-gradient-to-r from-indigo-600 via-purple-600 to-pink-600 bg-clip-text text-transparent">
            roadmap PRO
          </a>
        </div>

        <!-- 导航链接 -->
        <div class="hidden md:flex items-center space-x-4">
          <a href="/roadmaps" class="px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:text-indigo-600 hover:bg-indigo-50">路线图</a>
          <a href="/videos" class="px-3 py-2 rounded-md text-sm font-medium text-indigo-600 bg-indigo-50">课程视频</a>
          <a href="/questions" class="px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:text-emerald-600 hover:bg-emerald-50">测试题</a>
          <a href="/jobs" class="px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:text-rose-600 hover:bg-rose-50">招聘信息</a>
        </div>

        <!-- 移动端菜单按钮 -->
        <div class="md:hidden">
          <button type="button" class="text-gray-500 hover:text-gray-600 focus:outline-none focus:text-gray-600" aria-label="切换菜单">
            <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
            </svg>
          </button>
        </div>
      </div>
    </div>

    <!-- 移动端菜单 -->
    <div class="hidden md:hidden">
      <div class="px-2 pt-2 pb-3 space-y-1">
        <a href="/roadmaps" class="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-indigo-600 hover:bg-indigo-50">路线图</a>
        <a href="/videos" class="block px-3 py-2 rounded-md text-base font-medium text-indigo-600 bg-indigo-50">课程视频</a>
        <a href="/questions" class="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-emerald-600 hover:bg-emerald-50">测试题</a>
        <a href="/jobs" class="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-rose-600 hover:bg-rose-50">招聘信息</a>
      </div>
    </div>
  </nav>

  <div class="bg-white">
    <div class="container mx-auto px-4 py-12">
      {isLoading ? (
        <div class="flex justify-center items-center min-h-[400px]">
          <div class="text-gray-800">加载中...</div>
        </div>
      ) : error ? (
        <div class="flex justify-center items-center min-h-[400px]">
          <div class="text-red-500">{error}</div>
        </div>
      ) : (
        <>
          <!-- 课程推荐模块 -->
          <div class="mb-16">
            <div class="flex items-center justify-between mb-6">
              <div>
                <h2 class="text-2xl font-bold text-gray-900">基于你的技能目标推荐</h2>
                <p class="mt-1 text-gray-600">这些课程将帮助你达到目标岗位的技能要求</p>
              </div>
              <div class="flex items-center space-x-2">
                <span class="text-sm text-gray-500">更多推荐</span>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                </svg>
              </div>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {recommendedCourses.map((course) => (
                <div class="bg-white rounded-lg overflow-hidden transition-transform hover:scale-[1.02] border border-blue-100 hover:shadow-lg relative">
                  <!-- 推荐标签 -->
                  <div class="absolute top-3 left-3 bg-blue-500 text-white text-xs font-semibold px-2 py-1 rounded-full">
                    推荐学习
                  </div>
                  
                  <div class="relative">
                    <img src={course.coverImage} alt={course.title} class="w-full h-48 object-cover" />
                    {course.isHot && (
                      <span class="absolute top-3 right-3 bg-red-500 text-white text-xs font-semibold px-2 py-1 rounded">热门</span>
                    )}
                    {course.isNew && (
                      <span class="absolute top-3 right-3 bg-green-500 text-white text-xs font-semibold px-2 py-1 rounded">新课</span>
                    )}
                  </div>
                  
                  <div class="p-5">
                    <div class="flex flex-wrap gap-2 mb-3">
                      <span class="bg-blue-50 text-blue-600 px-2 py-1 rounded text-xs">{course.category}</span>
                      
                      {course.targetSkill && (
                        <!-- 技能提升标签 -->
                        <div class="flex items-center gap-1">
                          <span class="bg-purple-50 text-purple-600 px-2 py-1 rounded text-xs border border-purple-100">
                            {course.targetSkill.name}
                          </span>
                          <span class="text-gray-400 text-xs">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" viewBox="0 0 20 20" fill="currentColor">
                              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                            </svg>
                          </span>
                          {(() => {
                            const currentLevel = getDisplayLevel(course.targetSkill.currentLevel);
                            const targetLevel = getDisplayLevel(course.targetSkill.targetLevel);
                            return (
                              <>
                                <span class={`${currentLevel.colors.bg} ${currentLevel.colors.text} px-2 py-1 rounded text-xs`}>
                                  {currentLevel.label}
                                </span>
                                <span class="text-gray-400 text-xs">
                                  <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                  </svg>
                                </span>
                                <span class={`${targetLevel.colors.bg} ${targetLevel.colors.text} px-2 py-1 rounded text-xs`}>
                                  {targetLevel.label}
                                </span>
                              </>
                            );
                          })()}
                        </div>
                      )}

                      <div class="flex items-center ml-auto">
                        <span class="text-yellow-400 mr-1">
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                          </svg>
                        </span>
                        <span class="text-gray-600 text-sm">{course.rating}</span>
                      </div>
                    </div>
                    
                    <h3 class="text-xl font-semibold text-gray-900 mb-2">{course.title}</h3>
                    <p class="text-gray-600 text-sm mb-4 line-clamp-2">
                      {course.description}
                    </p>
                    
                    <div class="flex justify-between items-center">
                      <div class="flex items-center">
                        <img src="https://via.placeholder.com/40" alt="讲师头像" class="w-8 h-8 rounded-full mr-2" />
                        <span class="text-gray-600 text-sm">讲师ID: {course.instructorId}</span>
                      </div>
                      <div class="text-gray-600 text-sm">
                        <span>{course.lessonsCount}课时</span>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>

          <div class="border-t border-gray-200 my-12"></div>

          <!-- 全部课程标题 -->
          <div class="text-center mb-12">
            <h2 class="text-3xl font-bold text-gray-900 mb-4">全部课程</h2>
            <p class="text-gray-600 max-w-2xl mx-auto">
              探索精心制作的视频课程，按照自己的节奏学习，提升您的技能和知识
            </p>
          </div>

          <!-- 搜索和筛选区域 -->
          <div class="bg-gray-50 rounded-lg p-4 mb-8 border border-gray-200">
            <div class="flex flex-col md:flex-row gap-4">
              <!-- 搜索框 -->
              <div class="flex-1">
                <form id="searchForm" class="relative" onsubmit="return false;">
                  <input
                    id="searchInput"
                    type="text"
                    placeholder="搜索课程... (按回车搜索)"
                    class="w-full bg-white border border-gray-300 rounded-lg py-2 px-4 text-gray-800 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500"
                    value={keyword || ''}
                  />
                  <button type="submit" class="absolute right-3 top-2.5 text-gray-400">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                    </svg>
                  </button>
                </form>
              </div>

              <!-- 筛选选项 -->
              <div class="flex gap-3">
                <select class="bg-white border border-gray-300 rounded-lg py-2 px-4 text-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-500">
                  <option value="">所有分类</option>
                  <option value="frontend">前端开发</option>
                  <option value="backend">后端开发</option>
                  <option value="devops">DevOps</option>
                  <option value="ai">人工智能</option>
                  <option value="data">数据分析</option>
                </select>
                <select class="bg-white border border-gray-300 rounded-lg py-2 px-4 text-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-500">
                  <option value="">难度等级</option>
                  <option value="beginner">入门</option>
                  <option value="intermediate">中级</option>
                  <option value="advanced">高级</option>
                </select>
              </div>
            </div>
          </div>

          <!-- 课程列表 -->
          <div id="courseList" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {courses.map((course) => {
              const levelInfo = getCourseLevelInfo(course.difficultyLevel);
              return (
                <div class="bg-white rounded-lg overflow-hidden transition-transform hover:scale-[1.02] border border-gray-200 hover:shadow-lg">
                  <div class="relative">
                    <img src={course.coverImage || "https://via.placeholder.com/400x225"} alt={course.title} class="w-full h-48 object-cover" />
                    {course.isHot && (
                      <span class="absolute top-3 right-3 bg-red-500 text-white text-xs font-semibold px-2 py-1 rounded">热门</span>
                    )}
                    {course.isNew && (
                      <span class="absolute top-3 right-3 bg-green-500 text-white text-xs font-semibold px-2 py-1 rounded">新课</span>
                    )}
                  </div>
                  <div class="p-5">
                    <div class="flex flex-wrap gap-2 mb-3">
                      <span class="bg-blue-50 text-blue-600 px-2 py-1 rounded text-xs">{course.category}</span>
                      <span class={`${levelInfo.colors.bg} ${levelInfo.colors.text} ${levelInfo.colors.border} px-2 py-1 rounded text-xs border`}>
                        目标水平：{levelInfo.label}
                      </span>
                      <div class="flex items-center ml-auto">
                        <span class="text-yellow-400 mr-1">
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                          </svg>
                        </span>
                        <span class="text-gray-600 text-sm">{course.rating}</span>
                      </div>
                    </div>
                    <h3 class="text-xl font-semibold text-gray-900 mb-2">{course.title}</h3>
                    <p class="text-gray-600 text-sm mb-4 line-clamp-2">
                      {course.description}
                    </p>
                    <div class="flex justify-between items-center">
                      <div class="flex items-center">
                        <img src="https://via.placeholder.com/40" alt="讲师头像" class="w-8 h-8 rounded-full mr-2" />
                        <span class="text-gray-600 text-sm">讲师ID: {course.instructorId}</span>
                      </div>
                      <div class="text-gray-600 text-sm">
                        <span>{course.lessonsCount}课时</span>
                      </div>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>

          <!-- 分页 -->
          <div class="flex justify-center mt-12">
            <nav class="flex items-center space-x-2">
              <a href="#" class="px-3 py-2 rounded-md bg-gray-100 text-gray-600 hover:bg-gray-200">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                </svg>
              </a>
              <a href="#" class="px-3 py-2 rounded-md bg-blue-600 text-white">1</a>
              <a href="#" class="px-3 py-2 rounded-md bg-gray-100 text-gray-600 hover:bg-gray-200">2</a>
              <a href="#" class="px-3 py-2 rounded-md bg-gray-100 text-gray-600 hover:bg-gray-200">3</a>
              <span class="px-3 py-2 text-gray-400">...</span>
              <a href="#" class="px-3 py-2 rounded-md bg-gray-100 text-gray-600 hover:bg-gray-200">8</a>
              <a href="#" class="px-3 py-2 rounded-md bg-gray-100 text-gray-600 hover:bg-gray-200">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                </svg>
              </a>
            </nav>
          </div>
        </>
      )}
    </div>
  </div>

  <script>
    import type { Course } from '../types/video';

    // 技能等级相关的常量 - 用于动态生成的内容
    const LEVEL_COLORS = {
      beginner: { bg: 'bg-green-100', text: 'text-green-800', border: 'border-green-200' },
      intermediate: { bg: 'bg-blue-100', text: 'text-blue-800', border: 'border-blue-200' },
      advanced: { bg: 'bg-purple-100', text: 'text-purple-800', border: 'border-purple-200' }
    } as const;

    const LEVEL_LABELS = {
      beginner: '入门',
      intermediate: '进阶',
      advanced: '专家'
    } as const;

    // 获取DOM元素
    const searchForm = document.getElementById('searchForm') as HTMLFormElement;
    const searchInput = document.getElementById('searchInput') as HTMLInputElement;
    const courseList = document.getElementById('courseList') as HTMLElement;

    // 创建课程卡片的HTML
    function createCourseCard(course: Course) {
      const levelColors = LEVEL_COLORS[course.difficultyLevel];
      const levelLabel = LEVEL_LABELS[course.difficultyLevel];
      
      return `
        <div class="bg-white rounded-lg overflow-hidden transition-transform hover:scale-[1.02] border border-gray-200 hover:shadow-lg">
          <div class="relative">
            <img src="${course.coverImage || "https://via.placeholder.com/400x225"}" alt="${course.title}" class="w-full h-48 object-cover" />
            ${course.isHot ? '<span class="absolute top-3 right-3 bg-red-500 text-white text-xs font-semibold px-2 py-1 rounded">热门</span>' : ''}
            ${course.isNew ? '<span class="absolute top-3 right-3 bg-green-500 text-white text-xs font-semibold px-2 py-1 rounded">新课</span>' : ''}
          </div>
          <div class="p-5">
            <div class="flex flex-wrap gap-2 mb-3">
              <span class="bg-blue-50 text-blue-600 px-2 py-1 rounded text-xs">${course.category}</span>
              <span class="${levelColors.bg} ${levelColors.text} ${levelColors.border} px-2 py-1 rounded text-xs border">
                目标水平：${levelLabel}
              </span>
              <div class="flex items-center ml-auto">
                <span class="text-yellow-400 mr-1">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                  </svg>
                </span>
                <span class="text-gray-600 text-sm">${course.rating}</span>
              </div>
            </div>
            <h3 class="text-xl font-semibold text-gray-900 mb-2">${course.title}</h3>
            <p class="text-gray-600 text-sm mb-4 line-clamp-2">${course.description}</p>
            <div class="flex justify-between items-center">
              <div class="flex items-center">
                <img src="https://via.placeholder.com/40" alt="讲师头像" class="w-8 h-8 rounded-full mr-2" />
                <span class="text-gray-600 text-sm">讲师ID: ${course.instructorId}</span>
              </div>
              <div class="text-gray-600 text-sm">
                <span>${course.lessonsCount}课时</span>
              </div>
            </div>
          </div>
        </div>
      `;
    }

    // 搜索课程
    async function searchCourses(keyword: string) {
      if (!courseList) return;
      
      try {
        const loadingDiv = document.createElement('div');
        loadingDiv.className = 'flex justify-center items-center min-h-[400px]';
        loadingDiv.innerHTML = '<div class="text-gray-800">加载中...</div>';
        courseList.innerHTML = '';
        courseList.appendChild(loadingDiv);

        // 更新URL，但不重新加载页面
        const newUrl = keyword 
          ? `${window.location.pathname}?keyword=${encodeURIComponent(keyword)}`
          : window.location.pathname;
        window.history.pushState({}, '', newUrl);

        const response = await fetch(`http://localhost:8999/api/videos/courses?page=0&size=6&keyword=${encodeURIComponent(keyword)}`);
        if (!response.ok) {
          throw new Error('搜索请求失败');
        }
        const data = await response.json();
        
        courseList.innerHTML = data.content.map((course: Course) => createCourseCard(course)).join('');
      } catch (e) {
        console.error('Search failed:', e);
        courseList.innerHTML = '<div class="flex justify-center items-center min-h-[400px]"><div class="text-red-500">搜索失败</div></div>';
      }
    }

    // 添加表单提交事件监听
    if (searchForm && searchInput) {
      // 处理表单提交（回车键）
      searchForm.addEventListener('submit', (e: Event) => {
        e.preventDefault();
        const keyword = searchInput.value.trim();
        
        if (keyword) {
          searchCourses(keyword);
        } else {
          // 如果搜索框为空，更新URL并重新加载页面
          window.location.href = window.location.pathname;
        }
      });

      // 处理搜索按钮点击
      const searchButton = searchForm.querySelector('button');
      if (searchButton) {
        searchButton.addEventListener('click', () => {
          const keyword = searchInput.value.trim();
          if (keyword) {
            searchCourses(keyword);
          } else {
            window.location.href = window.location.pathname;
          }
        });
      }
    }

    // 添加移动端菜单切换功能
    const menuButton = document.querySelector('button[aria-label="切换菜单"]');
    const mobileMenu = document.querySelector('.md\\:hidden.hidden');
    
    if (menuButton && mobileMenu) {
      menuButton.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
    }
  </script>
</Layout> 